<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.3 r1808647">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath">C:\Jmeter\apache-jmeter-3.3\bin\ApacheJMeter.jar,C:\Jmeter\apache-jmeter-3.3\bin\mysql-connector-java-8.0.7-dmr-bin.jar</stringProp>
    </TestPlan>
    <hashTree>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="获取配置文件" enabled="true">
        <stringProp name="filename">..\resources\配置文件.txt</stringProp>
        <stringProp name="fileEncoding">utf-8</stringProp>
        <stringProp name="variableNames">serverUrl,sqlCheck,filePath</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${serverUrl}</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
        <stringProp name="dataSource">test_dev</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="checkQuery">Select 1</stringProp>
        <stringProp name="dbUrl">jdbc:mysql://test.kuaihuoyun.com/kd_caesar_109?useUnicode=true&amp;characterEncoding=utf-8</stringProp>
        <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
        <stringProp name="username">root</stringProp>
        <stringProp name="password">pass321</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="登录" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1523263506000</longProp>
        <longProp name="ThreadGroup.end_time">1523263506000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">cookie</stringProp>
              <stringProp name="Header.value">tkey=${__property(tokenValue)};oid=${__property(oidValue)};cid=${__property(cidValue)};eid=${__property(eidValue)}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="service" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">employee.loginAuth</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">service</stringProp>
              </elementProp>
              <elementProp name="params" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;terminalType&quot;:1,&quot;username&quot;:&quot;ssm&quot;,&quot;password&quot;:&quot;c0de8364e56b7cbecb6d69b8bd3d9a8a&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">params</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">ktms-dev.kuaihuoyun.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ktms/service/call</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">
String token = vars.get(&quot;token&quot;);
log.info(&quot;获取到token:&quot;+token);
/*
String oid = vars.get(&quot;oid&quot;);
log.info(&quot;获取到oid:&quot;+oid);

String cid = vars.get(&quot;cid&quot;);
log.info(&quot;获取到cid:&quot;+cid);

String eid = vars.get(&quot;eid&quot;);
log.info(&quot;获取到eid:&quot;+eid);
*/

if(token.isEmpty()){
	Failure =true;
	FailureMessage =&quot;返回数据错误&quot;;
}
else{
	Failure =false;
	FailureMessage =&quot;返回数据正确&quot;;
}

</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token;oid;cid;eid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.token;$.data.oid;$.data.cid;$.data.eid</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null;null;null</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            <stringProp name="TestPlan.comments">表达式中的data.token是层级关系，在data下面的token</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
          <stringProp name="TestPlan.comments">保存全局变量</stringProp>
          <stringProp name="BeanShellSampler.query">//${_setproperty(tokenValue,${token})}
${__setProperty(tokenValue,${token})} 
${__setProperty(oidValue,${oid})} 
${__setProperty(cidValue,${cid})} 
${__setProperty(eidValue,${eid})} </stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="开单成功" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">3</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1523428420000</longProp>
        <longProp name="ThreadGroup.end_time">1523428420000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">cookie</stringProp>
              <stringProp name="Header.value">tkey=${__property(tokenValue)};</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
          <stringProp name="JSONPostProcessor.referenceNames">status;number;message;</stringProp>
          <stringProp name="JSONPostProcessor.jsonPathExprs">$.status;$.data;$.message;</stringProp>
          <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          <stringProp name="JSONPostProcessor.defaultValues">null;null;null</stringProp>
          <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          <stringProp name="TestPlan.comments">获取接口返回的json中的信息</stringProp>
        </JSONPostProcessor>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">F:\快驰\自动化\testing\开单数据1.csv</stringProp>
          <stringProp name="fileEncoding">GB2312</stringProp>
          <stringProp name="variableNames"></stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">service=order.create&amp;params={&quot;order&quot;:{&quot;cargoNumber&quot;:&quot;&quot;,&quot;sourceStationId&quot;:&quot;${sourceStationId}&quot;,&quot;sourceStation&quot;:&quot;${sourceStation}&quot;,&quot;targetStationId&quot;:&quot;${targetStationId}&quot;,&quot;targetStation&quot;:&quot;${targetStation}&quot;,&quot;routeStationId&quot;:&quot;0&quot;,&quot;routeStation&quot;:&quot;&quot;,&quot;consignerId&quot;:&quot;${consignerId}&quot;,&quot;consigneeId&quot;:&quot;${consigneeId}&quot;,&quot;consignerName&quot;:&quot;${consignerName}&quot;,&quot;consigneeName&quot;:&quot;${consigneeName}&quot;,&quot;consignerPhone&quot;:&quot;${consignerPhone}&quot;,&quot;consigneePhone&quot;:&quot;${consigneePhone}&quot;,&quot;consignerAddress&quot;:&quot;${consignerAddress}&quot;,&quot;consigneeAddress&quot;:&quot;${consigneeAddress}&quot;,&quot;consignerType&quot;:&quot;0&quot;,&quot;consigneeType&quot;:&quot;0&quot;,&quot;receiptNumber&quot;:&quot;${receiptNumber}&quot;,&quot;clientType&quot;:0,&quot;comments&quot;:&quot;&quot;,&quot;salesmanId&quot;:&quot;&quot;,&quot;salesmanName&quot;:&quot;&quot;,&quot;waitDelivery&quot;:0,&quot;ename&quot;:&quot;${ename}&quot; ,&quot;consignerIdNo&quot;:&quot;&quot;},&quot;cargos&quot;:[{&quot;name&quot;:&quot;${name}&quot;,&quot;quantity&quot;:&quot;${quantity}&quot;,&quot;weight&quot;:&quot;${weight}&quot;,&quot;volume&quot;:&quot;${volume}&quot;,&quot;unitPrice&quot;:&quot;&quot;,&quot;overpack&quot;:&quot;${overpack}&quot;,&quot;unitValue&quot;:1}],&quot;orderFee&quot;:{&quot;deliveryType&quot;:1,&quot;paymentType&quot;:&quot;${paymentType}&quot;,&quot;paymentCollect&quot;:&quot;${paymentCollect}&quot;,&quot;collectFee&quot;:1,&quot;freight&quot;:&quot;${freight}&quot;,&quot;pickupFee&quot;:&quot;&quot;,&quot;deliveryFee&quot;:&quot;&quot;,&quot;refund&quot;:&quot;&quot;,&quot;rebate&quot;:&quot;&quot;,&quot;insurePrice&quot;:500,&quot;insureFee&quot;:3,&quot;reserveTransitFee&quot;&#xd;
:&quot;&quot;,&quot;recordFee&quot;:1,&quot;receiptFee&quot;:0,&quot;storageFee&quot;:&quot;&quot;}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">ktms-dev.kuaihuoyun.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/ktms/service/call</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">开单</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">import java.sql.*;
import java.util.*;
import java.lang.*;
import org.apache.regexp.*;

//校验返回结果状态
String resultStatus=vars.get(&quot;status&quot;);
String orderId=vars.get(&quot;number&quot;);
log.info(&quot;---获取的运单号id为：---&quot;+orderId);

if(resultStatus.equals(&quot;200&quot;)&amp;&amp;!orderId.isEmpty()){
	Failure=false;
	FailureMessage =&quot;接口返回值正确&quot;;
}
else{
	Failure=true;
	FailureMessage =&quot;接口返回值错误!&quot;;
}

//校验数据库写入是否成功
String driver=&quot;com.mysql.jdbc.Driver&quot;;
String url=&quot;jdbc:mysql://test.kuaihuoyun.com/kd_caesar_109?useUnicode=true&amp;characterEncoding=utf-8&quot;;
String username=&quot;root&quot;;
String password=&quot;pass321&quot;;
String querySql=&quot;select * from t_order where number=&quot;+&quot;&apos;&quot;+orderId+&quot;&apos;&quot;;
Connection conn =null;
Class.forName(driver);
conn = (Connection)DriverManager.getConnection(url,username,password);

if(!conn.isClosed()){
	Statement statement=conn.createStatement();
	ResultSet rs = statement.executeQuery(querySql);
	rs.last();
	int resultCount =rs.getRow();
	log.info(&quot;查询条数：&quot;+resultCount);
		if(resultCount==1){
		Failure=false;
		FailureMessage =&quot;开单写入数据库成功&quot;;
	}
	else{
		Failure=true;
		FailureMessage =&quot;开单写入数据库失败!&quot;;
	}

	 rs.close();
	 statement.close();
	 conn.close();
}else{
	Failure=true;
	FailureMessage =&quot;连接数据库失败或者数据库内内有历史数据!&quot;;
}



</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="运费缴款-查询" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1526611278000</longProp>
        <longProp name="ThreadGroup.end_time">1526611278000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">cookie</stringProp>
              <stringProp name="Header.value">tkey=${__property(tokenValue)};</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
          <stringProp name="JSONPostProcessor.referenceNames">status;message;total;items;count;pushTime</stringProp>
          <stringProp name="JSONPostProcessor.jsonPathExprs">$.status;$.message;$.data.total;$.data.items[0].number;$.data.count;$.data.pushTime</stringProp>
          <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          <stringProp name="JSONPostProcessor.defaultValues">null;null;null;null;null;null</stringProp>
          <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
        </JSONPostProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">service=financeOperation.queryFundRecord&amp;params= {&quot;feeType&quot;:1,&quot;updatedStartTime&quot;:&quot;&quot;,&quot;updatedEndTime&quot;:&quot;&quot;,&quot;page&quot;:1,&quot;size&quot;:20}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">ktms-dev.kuaihuoyun.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ktms/service/call</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">运费缴款</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String status = vars.get(&quot;status&quot;);
log.info(&quot;运费缴款查询获取status：&quot;+status);

String total = vars.get(&quot;total&quot;);
log.info(&quot;运费缴款查询获取total：&quot;+total);

String number = vars.get(&quot;items&quot;);
log.info(&quot;运费缴款查询获取number[0]：&quot;+number);

String pushTime = vars.get(&quot;pushTime&quot;);
log.info(&quot;运费缴款查询获取pushTime：&quot;+pushTime);


if(status.equals(&quot;200&quot;)&amp;&amp; !total.equals(&quot;0&quot;) ){
	Failure =false;
	FailureMessage =&quot;返回数据正确&quot;;	
	log.info(&quot;运费缴款查询有数据，且查询正确！查询到的数据条数为：&quot;+total);
}
else{
	Failure =true;
	FailureMessage =&quot;返回数据错误&quot;;
	log.info(&quot;运费缴款查询无数据或有其他错误！查询到的数据条数为：&quot;+total);
}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
          <stringProp name="TestPlan.comments">保存全局变量</stringProp>
          <stringProp name="BeanShellSampler.query">${__setProperty(itemsValue,${items})} 
${__setProperty(pushTime,${pushTime})} 
${__setProperty(total,${total})} 
</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="运费缴款-确认" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1526884912000</longProp>
        <longProp name="ThreadGroup.end_time">1526884912000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">cookie</stringProp>
              <stringProp name="Header.value">tkey=${__property(tokenValue)};</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果（If）控制器" enabled="true">
          <stringProp name="IfController.condition">&quot;${__P(total)}&quot;!==&quot;0&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">status;message;id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.status;$.message;$.data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null;null</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">service=financeOperation.applyFee&amp;params={&quot;feeType&quot;:1,&quot;pushTime&quot;:&quot;${__P(pushTime)}&quot;,&quot;updatedStartTime&quot;:&quot;&quot;,&quot;updatedEndTime&quot;:&quot;&quot;,&quot;applyRemark&quot;:&quot;dfghdfgh&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">ktms-dev.kuaihuoyun.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ktms/service/call</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import java.sql.*;
import java.util.*;
import java.lang.*;
import org.apache.regexp.*;
String IdStatus;//存储数据库中获取的缴款状态status

String status = vars.get(&quot;status&quot;);
log.info(&quot;运费缴款---------确认获取status：&quot;+status);

String message = vars.get(&quot;message&quot;);
log.info(&quot;运费缴款---------确认获取message：&quot;+message);

//本次接口中获取到的核销编号
String id = vars.get(&quot;id&quot;);
log.info(&quot;运费缴款---------确认获取核销编号：&quot;+id);

//查询时候获取到的第一个运单id
String itemsNumber = &quot;${__P(itemsValue)}&quot;;
log.info(&quot;运费缴款---------确认获取-查询时候获取到的第一个运单id-itemsNumber：&quot;+itemsNumber);

if(status.equals(&quot;200&quot;) &amp;&amp; !id.equals(&quot;null&quot;)){
	Failure =false;
	FailureMessage =&quot;返回数据正确&quot;;	
}
else{
	Failure =true;
	FailureMessage =&quot;返回数据错误&quot;;
}


//校验数据库中运单缴款状态
String driver=&quot;com.mysql.jdbc.Driver&quot;;
String url=&quot;jdbc:mysql://test.kuaihuoyun.com/kd_caesar_109?useUnicode=true&amp;characterEncoding=utf-8&quot;;
String username=&quot;root&quot;;
String password=&quot;pass321&quot;;
String querySql=&quot;SELECT status from t_finance_fund where fee_type=&apos;1&apos; and order_id=(select id from t_order where number=&quot;+&quot;&apos;&quot;+itemsNumber+&quot;&apos;)&quot;;
Connection conn =null;
Class.forName(driver);
conn = (Connection)DriverManager.getConnection(url,username,password);

if(!conn.isClosed()){
	Statement statement=conn.createStatement();
	ResultSet rs = statement.executeQuery(querySql);
	if(rs.next()){
		IdStatus = rs.getString(&quot;status&quot;);
	}
	
	log.info(&quot;运单缴款后的状态：&quot;+IdStatus);
	if(IdStatus.equals(&quot;2&quot;)){
		Failure=false;
		FailureMessage =&quot;缴款成功&quot;;
		log.info(&quot;运单成功上缴运费，状态是已缴款但未到款！！！&quot;);
		
	}
	else{
		Failure=true;
		FailureMessage =&quot;缴款失败&quot;;
		log.info(&quot;运单缴款失败！！！&quot;);
	}

	 rs.close();
	 statement.close();
	 conn.close();
}else{
	Failure=true;
	FailureMessage =&quot;连接数据库失败或者数据库内内有历史数据!&quot;;
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">${__setProperty(id,${id})} 
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="上缴打款-查询" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1526983350000</longProp>
        <longProp name="ThreadGroup.end_time">1526983350000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">cookie</stringProp>
              <stringProp name="Header.value">tkey=${__property(tokenValue)};</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果（If）控制器" enabled="true">
          <stringProp name="IfController.condition">&quot;${__P(total)}&quot;!==&quot;0&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">status;message;total;count;number</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.status;$.message;$.data.total;$.data.count;$.data.items[0].number</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null;null;null;null</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
          </JSONPostProcessor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">service=financeApply.queryOrderFundList&amp;params= {&quot;recordId&quot;:&quot;${__P(id)}&quot;,&quot;page&quot;:1,&quot;size&quot;:20}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">ktms-dev.kuaihuoyun.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ktms/service/call</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">String status = vars.get(&quot;status&quot;);
log.info(&quot;核销编号查询status：&quot;+status);

String total = vars.get(&quot;total&quot;);
log.info(&quot;核销编号查询total：&quot;+total);

String number = vars.get(&quot;number&quot;);
log.info(&quot;核销编号中查询运单number：&quot;+number);

String numberId = &quot;${__P(id)}&quot;;
log.info(&quot;运费缴款核销单号-numberId：&quot;+numberId);

//查询时候获取到的第一个运单id
String itemsNumber = &quot;${__P(itemsValue)}&quot;;
log.info(&quot;运费缴款-确认获取-查询时候获取到的第一个运单id-itemsNumber：&quot;+itemsNumber);

if(status.equals(&quot;200&quot;) &amp;&amp; &quot;${__P(itemsValue)}&quot;.equals(number)){
	Failure =false;
	FailureMessage =&quot;返回数据正确&quot;;
	log.info(&quot;上缴前查询到的运单：&quot;+itemsNumber+&quot;,核销编号中查询运单号number：&quot;+number+&quot;确认运单被上缴，成功！&quot;);	
}
else{
	Failure =true;
	FailureMessage =&quot;返回数据错误&quot;;
	log.info(&quot;确认查询到的运单被缴款失败！！！&quot;);
}
</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="运费缴款" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1528944191000</longProp>
        <longProp name="ThreadGroup.end_time">1528944191000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="登录" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">cookie</stringProp>
                <stringProp name="Header.value">tkey=${__property(tokenValue)};oid=${__property(oidValue)};cid=${__property(cidValue)};eid=${__property(eidValue)}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="service" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">employee.loginAuth</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">service</stringProp>
                </elementProp>
                <elementProp name="params" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;terminalType&quot;:1,&quot;username&quot;:&quot;ssm&quot;,&quot;password&quot;:&quot;c0de8364e56b7cbecb6d69b8bd3d9a8a&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">params</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ktms/service/call</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">
String token = vars.get(&quot;token&quot;);
log.info(&quot;获取到token:&quot;+token);
/*
String oid = vars.get(&quot;oid&quot;);
log.info(&quot;获取到oid:&quot;+oid);

String cid = vars.get(&quot;cid&quot;);
log.info(&quot;获取到cid:&quot;+cid);

String eid = vars.get(&quot;eid&quot;);
log.info(&quot;获取到eid:&quot;+eid);
*/

if(token.isEmpty()){
	Failure =true;
	FailureMessage =&quot;返回数据错误&quot;;
}
else{
	Failure =false;
	FailureMessage =&quot;返回数据正确&quot;;
}

</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">token;oid;cid;eid</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.token;$.data.oid;$.data.cid;$.data.eid</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">null;null;null;null</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
              <stringProp name="TestPlan.comments">表达式中的data.token是层级关系，在data下面的token</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="TestPlan.comments">保存全局变量</stringProp>
            <stringProp name="BeanShellSampler.query">//${_setproperty(tokenValue,${token})}
${__setProperty(tokenValue,${token})} 
${__setProperty(oidValue,${oid})} 
${__setProperty(cidValue,${cid})} 
${__setProperty(eidValue,${eid})} </stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="开单" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">cookie</stringProp>
                <stringProp name="Header.value">tkey=${__property(tokenValue)};</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">status;number;message;</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.status;$.data;$.message;</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">null;null;null</stringProp>
            <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            <stringProp name="TestPlan.comments">获取接口返回的json中的信息</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">..\resources\开单数据1.csv</stringProp>
            <stringProp name="fileEncoding">GB2312</stringProp>
            <stringProp name="variableNames"></stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">service=order.create&amp;params={&quot;order&quot;:{&quot;cargoNumber&quot;:&quot;&quot;,&quot;sourceStationId&quot;:&quot;${sourceStationId}&quot;,&quot;sourceStation&quot;:&quot;${sourceStation}&quot;,&quot;targetStationId&quot;:&quot;${targetStationId}&quot;,&quot;targetStation&quot;:&quot;${targetStation}&quot;,&quot;routeStationId&quot;:&quot;0&quot;,&quot;routeStation&quot;:&quot;&quot;,&quot;consignerId&quot;:&quot;${consignerId}&quot;,&quot;consigneeId&quot;:&quot;${consigneeId}&quot;,&quot;consignerName&quot;:&quot;${consignerName}&quot;,&quot;consigneeName&quot;:&quot;${consigneeName}&quot;,&quot;consignerPhone&quot;:&quot;${consignerPhone}&quot;,&quot;consigneePhone&quot;:&quot;${consigneePhone}&quot;,&quot;consignerAddress&quot;:&quot;${consignerAddress}&quot;,&quot;consigneeAddress&quot;:&quot;${consigneeAddress}&quot;,&quot;consignerType&quot;:&quot;0&quot;,&quot;consigneeType&quot;:&quot;0&quot;,&quot;receiptNumber&quot;:&quot;${receiptNumber}&quot;,&quot;clientType&quot;:0,&quot;comments&quot;:&quot;&quot;,&quot;salesmanId&quot;:&quot;&quot;,&quot;salesmanName&quot;:&quot;&quot;,&quot;waitDelivery&quot;:0,&quot;ename&quot;:&quot;${ename}&quot; ,&quot;consignerIdNo&quot;:&quot;&quot;},&quot;cargos&quot;:[{&quot;name&quot;:&quot;${name}&quot;,&quot;quantity&quot;:&quot;${quantity}&quot;,&quot;weight&quot;:&quot;${weight}&quot;,&quot;volume&quot;:&quot;${volume}&quot;,&quot;unitPrice&quot;:&quot;&quot;,&quot;overpack&quot;:&quot;${overpack}&quot;,&quot;unitValue&quot;:1}],&quot;orderFee&quot;:{&quot;deliveryType&quot;:1,&quot;paymentType&quot;:&quot;${paymentType}&quot;,&quot;paymentCollect&quot;:&quot;${paymentCollect}&quot;,&quot;collectFee&quot;:1,&quot;freight&quot;:&quot;${freight}&quot;,&quot;pickupFee&quot;:&quot;&quot;,&quot;deliveryFee&quot;:&quot;&quot;,&quot;refund&quot;:&quot;&quot;,&quot;rebate&quot;:&quot;&quot;,&quot;insurePrice&quot;:500,&quot;insureFee&quot;:3,&quot;reserveTransitFee&quot;&#xd;
:&quot;&quot;,&quot;recordFee&quot;:1,&quot;receiptFee&quot;:0,&quot;storageFee&quot;:&quot;&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${serverUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/ktms/service/call</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">开单</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断走数据库校验" enabled="true">
            <stringProp name="IfController.condition">${__jexl3(&quot;${sqlCheck}&quot;==&quot;true&quot;)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="走数据校验" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.sql.*;
import java.util.*;
import java.lang.*;
import org.apache.regexp.*;

String orderId=vars.get(&quot;number&quot;);
log.info(&quot;---获取的运单号id为：---&quot;+orderId);

//校验数据库写入是否成功
String driver=&quot;com.mysql.jdbc.Driver&quot;;
String url=&quot;jdbc:mysql://test.kuaihuoyun.com/kd_caesar_109?useUnicode=true&amp;characterEncoding=utf-8&quot;;
String username=&quot;root&quot;;
String password=&quot;pass321&quot;;
String querySql=&quot;select * from t_order where number=&quot;+&quot;&apos;&quot;+orderId+&quot;&apos;&quot;;
Connection conn =null;
Class.forName(driver);
conn = (Connection)DriverManager.getConnection(url,username,password);

if(!conn.isClosed()){
	Statement statement=conn.createStatement();
	ResultSet rs = statement.executeQuery(querySql);
	rs.last();
	int resultCount =rs.getRow();
	log.info(&quot;查询条数：&quot;+resultCount);
		if(resultCount==1){
		Failure=false;
		FailureMessage =&quot;开单写入数据库成功&quot;;
	}
	else{
		Failure=true;
		FailureMessage =&quot;开单写入数据库失败!&quot;;
	}

	 rs.close();
	 statement.close();
	 conn.close();
}else{
	Failure=true;
	FailureMessage =&quot;连接数据库失败或者数据库内内有历史数据!&quot;;
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断走接口校验" enabled="true">
            <stringProp name="IfController.condition">${__jexl3(&quot;${sqlCheck}&quot;==&quot;false&quot;)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">//校验返回结果状态
String resultStatus=vars.get(&quot;status&quot;);
String orderId=vars.get(&quot;number&quot;);
log.info(&quot;---获取的运单号id为：---&quot;+orderId);

if(resultStatus.equals(&quot;200&quot;)&amp;&amp;!orderId.isEmpty()){
	Failure=false;
	FailureMessage =&quot;接口返回值正确&quot;;
}
else{
	Failure=true;
	FailureMessage =&quot;接口返回值错误!&quot;;
}





</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="运费缴款查询" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">cookie</stringProp>
                <stringProp name="Header.value">tkey=${__property(tokenValue)};</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断走数据库校验" enabled="true">
            <stringProp name="IfController.condition">${__jexl3(&quot;${sqlCheck}&quot;==&quot;true&quot;)} </stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">import java.sql.*;
import java.util.*;
import java.lang.*;
import org.apache.regexp.*;


//校验数据库
String driver=&quot;com.mysql.jdbc.Driver&quot;;
String url=&quot;jdbc:mysql://test.kuaihuoyun.com/kd_caesar_109?useUnicode=true&amp;characterEncoding=utf-8&quot;;
String username=&quot;root&quot;;
String password=&quot;pass321&quot;;
String querySql=&quot;SELECT * from t_finance_fund WHERE  fee_type=1 and payment_type in(1,2) and canceled=0 and updated&gt;=DATE_SUB(CURRENT_DATE,INTERVAL 60 day) and  apply_station_id=&apos;&quot;+&quot;${__P(oidValue)}&quot;+&quot;&apos;&quot;;
Connection conn =null;
log.info(&quot;sql--=&quot;+querySql);
Class.forName(driver);
conn = (Connection)DriverManager.getConnection(url,username,password);

if(!conn.isClosed()){
	Statement statement=conn.createStatement();
	ResultSet rs = statement.executeQuery(querySql);
	rs.last();
	int resultCount =rs.getRow();
	log.info(&quot;数据库校验-运费缴款，查询条数：&quot;+resultCount);
		if(resultCount&gt;0){
		Failure=false;
		FailureMessage =&quot;运费缴款查询数据库成功&quot;;
	}
	else{
		Failure=true;
		FailureMessage =&quot;运费缴款查询数据库失败!&quot;;
	}

	 rs.close();
	 statement.close();
	 conn.close();
}else{
	Failure=true;
	FailureMessage =&quot;连接数据库失败或者数据库内内有历史数据!&quot;;
}</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断走接口校验" enabled="true">
            <stringProp name="IfController.condition">${__jexl3(&quot;${sqlCheck}&quot;==&quot;false&quot;)} </stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">service=financeOperation.queryFundRecord&amp;params= {&quot;feeType&quot;:1,&quot;updatedStartTime&quot;:&quot;2018-01-01 00:00:00&quot;,&quot;updatedEndTime&quot;:&quot;&quot;,&quot;page&quot;:1,&quot;size&quot;:20}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${serverUrl}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ktms/service/call</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">运费缴款</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">status;message;total;items;count;pushTime</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.status;$.message;$.data.total;$.data.items[0].number;$.data.count;$.data.pushTime</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">null;null;null;null;null;null</stringProp>
                <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
              </JSONPostProcessor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">String status = vars.get(&quot;status&quot;);
log.info(&quot;运费缴款查询获取status：&quot;+status);

String total = vars.get(&quot;total&quot;);
log.info(&quot;运费缴款查询获取total：&quot;+total);

String number = vars.get(&quot;items&quot;);
log.info(&quot;运费缴款查询获取number[0]：&quot;+number);

String pushTime = vars.get(&quot;pushTime&quot;);
log.info(&quot;运费缴款查询获取pushTime：&quot;+pushTime);


if(status.equals(&quot;200&quot;)&amp;&amp; !total.equals(&quot;0&quot;) ){
	Failure =false;
	FailureMessage =&quot;返回数据正确&quot;;	
	log.info(&quot;接口校验，运费缴款查询有数据，且查询正确！查询到的数据条数为：&quot;+total);
}
else{
	Failure =true;
	FailureMessage =&quot;返回数据错误&quot;;
	log.info(&quot;接口校验，运费缴款查询无数据或有其他错误！查询到的数据条数为：&quot;+total);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
          </hashTree>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="TestPlan.comments">保存全局变量</stringProp>
            <stringProp name="BeanShellSampler.query">${__setProperty(itemsValue,${items})} 
${__setProperty(pushTime,${pushTime})} 
${__setProperty(total,${total})} 
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="true">
            <stringProp name="TestPlan.comments">确认缴款的数据库校验，查询出核销id，传给上缴打款查询时用</stringProp>
            <stringProp name="dataSource">test_dev</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT record_id,status from t_finance_fund where fee_type=1 and payment_type in(1,2) and canceled=0  and order_id=(select id from t_order where number=&apos;${__P(itemsValue)}&apos;)</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">id,status</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="确认缴款" enabled="true">
            <stringProp name="IfController.condition">&quot;${__P(total)}&quot;!==&quot;0&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">tkey=${__property(tokenValue)};</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断走接口校验" enabled="true">
              <stringProp name="IfController.condition">${__jexl3(&quot;${sqlCheck}&quot;==&quot;false&quot;)} </stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">status;message;id</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.status;$.message;$.data.id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">null;null;null</stringProp>
                <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
              </JSONPostProcessor>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">service=financeOperation.applyFee&amp;params={&quot;feeType&quot;:1,&quot;pushTime&quot;:&quot;${__P(pushTime)}&quot;,&quot;updatedStartTime&quot;:&quot;&quot;,&quot;updatedEndTime&quot;:&quot;&quot;,&quot;applyRemark&quot;:&quot;dfghdfgh&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverUrl}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ktms/service/call</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">String IdStatus;//存储数据库中获取的缴款状态status

log.info(&quot;运费缴款确认-----接口校验----&quot;);
String status = vars.get(&quot;status&quot;);
log.info(&quot;运费缴款---------确认获取status：&quot;+status);

String message = vars.get(&quot;message&quot;);
log.info(&quot;运费缴款---------确认获取message：&quot;+message);

//本次接口中获取到的核销编号
String id = vars.get(&quot;id&quot;);
log.info(&quot;运费缴款---------确认获取核销编号：&quot;+id);

//查询时候获取到的第一个运单id
String itemsNumber = &quot;${__P(itemsValue)}&quot;;
log.info(&quot;运费缴款---------确认获取-查询时候获取到的第一个运单id-itemsNumber：&quot;+itemsNumber);

if(status.equals(&quot;200&quot;) &amp;&amp; !id.equals(&quot;null&quot;)){
	Failure =false;
	FailureMessage =&quot;返回数据正确&quot;;	
}
else{
	Failure =true;
	FailureMessage =&quot;返回数据错误&quot;;
}
</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
              <stringProp name="BeanShellSampler.query">${__setProperty(id,${id})} 
</stringProp>
              <stringProp name="BeanShellSampler.filename"></stringProp>
              <stringProp name="BeanShellSampler.parameters"></stringProp>
              <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
            </BeanShellSampler>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断走数据库校验" enabled="true">
              <stringProp name="IfController.condition">${__jexl3(&quot;${sqlCheck}&quot;==&quot;true&quot;)} </stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">import java.sql.*;
import java.util.*;
import java.lang.*;
import org.apache.regexp.*;
String IdStatus;//存储数据库中获取的缴款状态status
log.info(&quot;运费缴款确认-----数据库校验----&quot;);

String id =null;
//查询时候获取到的第一个运单id
String itemsNumber = &quot;${__P(itemsValue)}&quot;;
log.info(&quot;运费缴款---------确认获取-查询时候获取到的第一个运单id-itemsNumber：&quot;+itemsNumber);

//校验数据库中运单缴款状态
String driver=&quot;com.mysql.jdbc.Driver&quot;;
String url=&quot;jdbc:mysql://test.kuaihuoyun.com/kd_caesar_109?useUnicode=true&amp;characterEncoding=utf-8&quot;;
String username=&quot;root&quot;;
String password=&quot;pass321&quot;;
String querySql=&quot;SELECT record_id,status from t_finance_fund where fee_type=1 and payment_type in(1,2) and canceled=0  and order_id=(select id from t_order where number=&quot;+&quot;&apos;&quot;+itemsNumber+&quot;&apos;)&quot;;

log.info(&quot;querySql=&quot;+querySql);
Connection conn =null;
Class.forName(driver);
conn = (Connection)DriverManager.getConnection(url,username,password);

if(!conn.isClosed()){
	Statement statement=conn.createStatement();
	ResultSet rs = statement.executeQuery(querySql);
	if(rs.next()){
		IdStatus = rs.getString(&quot;status&quot;);
		id=rs.getString(&quot;record_id&quot;);
	}
	
	log.info(&quot;运单缴款后的状态：&quot;+IdStatus);
	log.info(&quot;运单缴款后的缴款id=：&quot;+id);
	if(IdStatus.equals(&quot;2&quot;)){
		Failure=false;
		FailureMessage =&quot;缴款成功&quot;;
		log.info(&quot;运单成功上缴运费，状态是已缴款但未到款！！！&quot;);
		
	}
	else{
		Failure=true;
		FailureMessage =&quot;缴款失败&quot;;
		log.info(&quot;运单缴款失败！！！&quot;);
	}

	 rs.close();
	 statement.close();
	 conn.close();
}else{
	Failure=true;
	FailureMessage =&quot;连接数据库失败或者数据库内内有历史数据!&quot;;
}</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="上缴打款-查询" enabled="true">
            <stringProp name="IfController.condition">&quot;${__P(total)}&quot;!==&quot;0&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">cookie</stringProp>
                  <stringProp name="Header.value">tkey=${__property(tokenValue)};</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断走接口校验" enabled="true">
              <stringProp name="IfController.condition">${__jexl3(&quot;${sqlCheck}&quot;==&quot;false&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">status;message;total;count;number</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.status;$.message;$.data.total;$.data.count;$.data.items[0].number</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">null;null;null;null;null</stringProp>
                <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
              </JSONPostProcessor>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">service=financeApply.queryOrderFundList&amp;params= {&quot;recordId&quot;:&quot;${__P(id)}&quot;,&quot;page&quot;:1,&quot;size&quot;:20}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${serverUrl}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ktms/service/call</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
                <stringProp name="BeanShellAssertion.query">log.info(&quot;运费缴款后---上缴打款查询--接口校验----&quot;);

String status = vars.get(&quot;status&quot;);
log.info(&quot;缴款编号查询status：&quot;+status);

String total = vars.get(&quot;total&quot;);
log.info(&quot;缴款编号查询total：&quot;+total);

String number = vars.get(&quot;number&quot;);
log.info(&quot;缴款编号中查询运单number：&quot;+number);

String numberId = &quot;${__P(id)}&quot;;
log.info(&quot;运费缴款的缴款单号-numberId：&quot;+numberId);

//查询时候获取到的第一个运单id
String itemsNumber = &quot;${__P(itemsValue)}&quot;;
log.info(&quot;运费缴款-确认获取-查询时候获取到的第一个运单id-itemsNumber：&quot;+itemsNumber);

if(status.equals(&quot;200&quot;) &amp;&amp; &quot;${__P(itemsValue)}&quot;.equals(number)){
	Failure =false;
	FailureMessage =&quot;返回数据正确&quot;;
	log.info(&quot;上缴前查询到的运单：&quot;+itemsNumber+&quot;,缴款编号中查询运单号number：&quot;+number+&quot;确认运单被上缴，成功！&quot;);	
}
else{
	Failure =true;
	FailureMessage =&quot;返回数据错误&quot;;
	log.info(&quot;确认查询到的运单被缴款失败！！！&quot;);
}
</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断走数据库校验" enabled="true">
              <stringProp name="IfController.condition">${__jexl3(&quot;${sqlCheck}&quot;==&quot;true&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
                <stringProp name="BeanShellSampler.query">import java.sql.*;
import java.util.*;
import java.lang.*;
import org.apache.regexp.*;
log.info(&quot;运费缴款后---上缴打款查询-@@@@-接口校验--@@@--&quot;);
//查询时候获取到的第一个运单财务表中t_finance_fund的id
String itemsId = &quot;${__P(id)}&quot;;
log.info(&quot;运费缴款---------确认获取-查询时候获取到的第一个运单财务表中的id-itemsId：&quot;+itemsId);

//校验数据库中运单缴款状态,回单类型在数据库中对应的是1，在代码中传的是8----数据库校验
String driver=&quot;com.mysql.jdbc.Driver&quot;;
String url=&quot;jdbc:mysql://test.kuaihuoyun.com/kd_caesar_109?useUnicode=true&amp;characterEncoding=utf-8&quot;;
String username=&quot;root&quot;;
String password=&quot;pass321&quot;;
String querySql=&quot;SELECT * from t_finance_fund where id=&quot;+&quot;&apos;&quot;+itemsId+&quot;&apos;&quot;;
Connection conn =null;
Class.forName(driver);
conn = (Connection)DriverManager.getConnection(url,username,password);

if(!conn.isClosed()){
	Statement statement=conn.createStatement();
	ResultSet rs = statement.executeQuery(querySql);
	rs.last();
	int resultCount =rs.getRow();
	log.info(&quot;查询条数：&quot;+resultCount);
		if(resultCount&gt;0){
		Failure=false;
		FailureMessage =&quot;根据缴款编号查询数据库成功&quot;;
		log.info(&quot;根据缴款编号查询数据库成功&quot;);
	}
	else{
		Failure=true;
		FailureMessage =&quot;根据缴款编号查询数据库失败!&quot;;
		log.info(&quot;根据缴款编号查询数据库失败&quot;);
	}


	 rs.close();
	 statement.close();
	 conn.close();
}else{
	Failure=true;
	FailureMessage =&quot;连接数据库失败或者数据库内内有历史数据!&quot;;
}</stringProp>
                <stringProp name="BeanShellSampler.filename"></stringProp>
                <stringProp name="BeanShellSampler.parameters"></stringProp>
                <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
              </BeanShellSampler>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="工作台" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
